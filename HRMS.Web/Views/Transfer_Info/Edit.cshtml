@model HRMS.ViewModel.Transfer_InfoViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script src="../../html/assets/libs/jquery/dist/jquery.min.js"></script>
<div class="page-wrapper">
    <div class="container-fluid">
        <!-- ============================================================== -->
        <!-- Start Page Content -->
        <!-- ============================================================== -->
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-md-6">
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.TransferID)

                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Department Details</h4>
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmpID, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.DropDownList("EmpID", (IEnumerable<SelectListItem>)ViewBag.DropDownLoadRecoveryType, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.OldDepartment, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.OldDepartment, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OldDepartment, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.NewDepartment, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.NewDepartment, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NewDepartment, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OldDivision, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.OldDivision, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OldDivision, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.NewDivision, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.NewDivision, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NewDivision, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OldSection, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.OldSection, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OldSection, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.NewSection, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.NewSection, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NewSection, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.TransferActiveDate, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.TransferActiveDate, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TransferActiveDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.TransferDate, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.TransferDate, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TransferDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Remark, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Remark, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StatusState, new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.StatusState, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.StatusState, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="border-top">
                            <div class="card-body">
                                <button type="submit" class="btn btn-success">Save</button>
                                <button type="submit" class="btn btn-primary">Reset</button>
                                <a href="~/Transfer_Info/Index" class="btn btn-danger"> Cancel </a>

                            </div>
                        </div>
                    </div>

                </div>

            </div>
        }

    </div>
</div>
